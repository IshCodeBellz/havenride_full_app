// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin" | "/admin/metrics" | "/admin/ops" | "/admin/settings" | "/auth-callback" | "/dispatcher" | "/driver" | "/driver-signup" | "/driver/earnings" | "/driver/past-rides" | "/driver/profile" | "/driver/support" | "/rider" | "/rider/past-rides" | "/rider/profile" | "/rider/support" | "/role-select"
type AppRouteHandlerRoutes = "/api/bookings" | "/api/bookings/[id]/document" | "/api/bookings/[id]/fare" | "/api/bookings/[id]/messages" | "/api/bookings/[id]/status" | "/api/bookings/[id]/verify-pin" | "/api/calls/bridge" | "/api/calls/connect" | "/api/debug/user-status" | "/api/drivers/set-online" | "/api/drivers/update-location" | "/api/estimate" | "/api/payments/create-intent" | "/api/users/assign-role" | "/api/users/ensure-role" | "/api/users/me"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/admin/metrics": {}
  "/admin/ops": {}
  "/admin/settings": {}
  "/api/bookings": {}
  "/api/bookings/[id]/document": { "id": string; }
  "/api/bookings/[id]/fare": { "id": string; }
  "/api/bookings/[id]/messages": { "id": string; }
  "/api/bookings/[id]/status": { "id": string; }
  "/api/bookings/[id]/verify-pin": { "id": string; }
  "/api/calls/bridge": {}
  "/api/calls/connect": {}
  "/api/debug/user-status": {}
  "/api/drivers/set-online": {}
  "/api/drivers/update-location": {}
  "/api/estimate": {}
  "/api/payments/create-intent": {}
  "/api/users/assign-role": {}
  "/api/users/ensure-role": {}
  "/api/users/me": {}
  "/auth-callback": {}
  "/dispatcher": {}
  "/driver": {}
  "/driver-signup": {}
  "/driver/earnings": {}
  "/driver/past-rides": {}
  "/driver/profile": {}
  "/driver/support": {}
  "/rider": {}
  "/rider/past-rides": {}
  "/rider/profile": {}
  "/rider/support": {}
  "/role-select": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
